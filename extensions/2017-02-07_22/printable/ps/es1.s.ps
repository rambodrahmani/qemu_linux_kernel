%!PS-Adobe-3.0
%%BoundingBox: 24 24 571 818
%%Title: Enscript Output
%%For: Rambod Rahmani
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Mon Sep 23 00:18:19 2019
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [595 842] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6 6

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 547 def
/d_page_h 794 def
/d_header_x 0 def
/d_header_y 779 def
/d_header_w 547 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 547 def
/d_footer_h 0 def
/d_output_w 547 def
/d_output_h 779 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
24 24 translate
/pagenum 1 def
/fname (printable/es1.s) def
/fdir (printable) def
/ftail (es1.s) def
% User defined strings:
/fmodstr (Fri Sep 20 11:47:09 2019) def
/pagenumstr (1) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 766 M
(#*******************************************************************************) s
5 755 M
(# File: es1.s) s
5 744 M
(#       Contains the Assembly translation for es1.cpp.) s
5 733 M
(#) s
5 722 M
(# Author: Rambod Rahmani <rambodrahmani@autistici.org>) s
5 711 M
(#         Created on 14/09/2019.) s
5 700 M
(#*******************************************************************************) s
5 678 M
(#-------------------------------------------------------------------------------) s
5 667 M
(.TEXT) s
5 656 M
(.GLOBAL _ZN2clC1E3st1                                           # cl::cl\(st1 ss\)) s
5 645 M
(#-------------------------------------------------------------------------------) s
5 634 M
(# activation frame:) s
5 623 M
(# -----------------) s
5 612 M
(#  i            -16) s
5 601 M
(#  ss           -12) s
5 590 M
(#  &this        -8 ) s
5 579 M
(#  %rbp         0) s
5 568 M
(#-------------------------------------------------------------------------------) s
5 557 M
(_ZN2clC1E3st1:) s
5 546 M
(# set stack locations labels) s
5 535 M
(    .set this, -8) s
5 524 M
(    .set ss,   -12) s
5 513 M
(    .set i,    -16) s
5 491 M
(# prologue: activation frame) s
5 480 M
(    pushq %rbp) s
5 469 M
(    movq  %rsp, %rbp) s
5 458 M
(    subq  $16, %rsp                 # reserver stack space for actual arguments) s
5 436 M
(# copy actual arguments to the stack) s
5 425 M
(    movq %rdi, this\(%rbp\)) s
5 414 M
(    movl %esi, ss\(%rbp\)) s
5 392 M
(# foor loop initialization:) s
5 381 M
(    movl $0, i\(%rbp\)                # i = 0) s
5 359 M
(for:) s
5 348 M
(    cmpl $4, i\(%rbp\)                # check if i < 4) s
5 337 M
(    jge  finefor                    # end for loop \(i >= 4\)) s
5 315 M
(# for loop body:) s
5 304 M
(    movq   this\(%rbp\), %rdi         # &this -> %rdi) s
5 293 M
(    leaq   ss\(%rbp\), %rsi           # &ss -> %rsi) s
5 282 M
(    movslq i\(%rbp\), %rcx            # i => %rcx) s
5 271 M
(    movb   \(%rsi, %rcx, 1\), %al     # ss.vi[i] -> %al) s
5 260 M
(    movb   %al, \(%rdi, %rcx, 1\)     # v1[i] = ss.vi[i];) s
5 249 M
(    movsbq %al, %rax                # %al => %rax) s
5 238 M
(    movq   %rax, 24\(%rdi, %rcx, 8\)  # v2[i] = ss.vi[i];) s
5 227 M
(    movsbl %al, %eax                # %al => %eax) s
5 216 M
(    sal    $2, %eax                 # 4 * ss.vi[i] -> %eax) s
5 205 M
(    movl   %eax, 4\(%rdi, %rcx, 4\)   # v3[i] = 4 * ss.vi[i];) s
5 183 M
(    incl i\(%rbp\)                    # i++) s
5 172 M
(    jmp  for                        # loop again) s
5 150 M
(finefor:) s
5 128 M
(    movq  this\(%rbp\), %rax          # return initialized object address) s
5 117 M
(    leave                           # movq %rbp, %rsp; popq %rbp) s
5 106 M
(    ret) s
5 84 M
(#-------------------------------------------------------------------------------) s
5 73 M
(.GLOBAL _ZN2clC1ER3st1Pi                            # cl::cl\(st1& s1, int ar2[]\)) s
5 62 M
(#-------------------------------------------------------------------------------) s
5 51 M
(# activation record:) s
5 40 M
(# ------------------) s
5 29 M
(#  i            -28) s
5 18 M
(#  &ar2         -24) s
5 7 M
(#  &s1          -16) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
24 24 translate
/pagenum 2 def
/fname (printable/es1.s) def
/fdir (printable) def
/ftail (es1.s) def
% User defined strings:
/fmodstr (Fri Sep 20 11:47:09 2019) def
/pagenumstr (2) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 766 M
(#  this         -8) s
5 755 M
(#  %rbp         0) s
5 744 M
(#-------------------------------------------------------------------------------) s
5 733 M
(_ZN2clC1ER3st1Pi:) s
5 722 M
(# set stack locations labels) s
5 711 M
(    .set this, -8) s
5 700 M
(    .set s1,   -16) s
5 689 M
(    .set ar2,  -24) s
5 678 M
(    .set i,    -28) s
5 656 M
(# prologue: activation frame) s
5 645 M
(    pushq %rbp) s
5 634 M
(    movq  %rsp, %rbp) s
5 623 M
(    subq  $32, %rsp                 # reserve stack space for actual arguments) s
5 601 M
(# copy actual arguments to the stack) s
5 590 M
(    movq %rdi, this\(%rbp\)) s
5 579 M
(    movq %rsi, s1\(%rbp\)) s
5 568 M
(    movq %rdx, ar2\(%rbp\)) s
5 546 M
(# for loop intialization) s
5 535 M
(    movl $0, i\(%rbp\)                # i = 0) s
5 513 M
(for1:) s
5 502 M
(    cmpl $4, i\(%rbp\)                # check if i < 4) s
5 491 M
(    jge  finefor1                   # end for loop \(i >= 4\)) s
5 469 M
(# for loop body) s
5 458 M
(    movq   this\(%rbp\), %rdi         # &this -> %rdi) s
5 447 M
(    movq   s1\(%rbp\), %rsi           # &s1 -> %rsi) s
5 436 M
(    movq   ar2\(%rbp\), %rdx          # &ar2 -> %rdx) s
5 425 M
(    movslq i\(%rbp\), %rcx            # i => %rcx) s
5 414 M
(    movb   \(%rsi, %rcx, 1\), %al     # s1.vi[i] -> %al) s
5 403 M
(    movb   %al, \(%rdi, %rcx, 1\)     # v1[i] = s1.vi[i];) s
5 392 M
(    neg    %al                      # -s1.vi[i] -> %al) s
5 381 M
(    movsbq %al, %rax                # %al => %rax) s
5 370 M
(    movq   %rax, 24\(%rdi, %rcx, 8\)  # v2[i] = -s1.vi[i];) s
5 359 M
(    movl   \(%rdx, %rcx, 4\), %eax    # ar2[i] -> %eax) s
5 348 M
(    movl   %eax, 4\(%rdi, %rcx, 4\)   # v3[i] = ar2[i];) s
5 326 M
(    incl i\(%rbp\)                    # i++) s
5 315 M
(    jmp  for1                       # loop again) s
5 293 M
(finefor1:) s
5 271 M
(    leave                           # movq %rbp, %rsp; popq %rbp) s
5 260 M
(    ret) s
5 238 M
(#-------------------------------------------------------------------------------) s
5 227 M
(.GLOBAL _ZN2cl5elab1EPcRK3st2          # cl cl::elab1\(char ar1[], const st2& s2\)) s
5 216 M
(#-------------------------------------------------------------------------------) s
5 205 M
(# activation frame:) s
5 194 M
(# -----------------) s
5 183 M
(#  i            -100) s
5 172 M
(#  cla.v1       -96) s
5 161 M
(#  cla.v3[0-1]  -92) s
5 150 M
(#  cla.v3[2-3]  -84) s
5 139 M
(#  cla.v2[0]    -72) s
5 128 M
(#  cla.v2[1]    -64) s
5 117 M
(#  cla.v2[2]    -56) s
5 106 M
(#  cla.v2[3]    -48) s
5 95 M
(#  s1           -40) s
5 84 M
(#  &s2          -32) s
5 73 M
(#  &ar1         -24) s
5 62 M
(#  this         -16) s
5 51 M
(#  indo         -8) s
5 40 M
(#  %rbp         0) s
5 29 M
(#-------------------------------------------------------------------------------) s
5 18 M
(_ZN2cl5elab1EPcRK3st2:) s
5 7 M
(# set stack locations labels) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
24 24 translate
/pagenum 3 def
/fname (printable/es1.s) def
/fdir (printable) def
/ftail (es1.s) def
% User defined strings:
/fmodstr (Fri Sep 20 11:47:09 2019) def
/pagenumstr (3) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 766 M
(    .set indo, -8) s
5 755 M
(    .set this, -16) s
5 744 M
(    .set ar1,  -24) s
5 733 M
(    .set s2,   -32) s
5 722 M
(    .set s1,   -40) s
5 711 M
(    .set cla,  -96) s
5 700 M
(    .set i,    -100) s
5 678 M
(# prologue: activation frame) s
5 667 M
(    pushq %rbp) s
5 656 M
(    movq  %rsp, %rbp) s
5 645 M
(    subq  $100, %rsp                # reserve stack space for actual arguments) s
5 623 M
(# copy actual arguments to the stack) s
5 612 M
(    movq %rdi, indo\(%rbp\)) s
5 601 M
(    movq %rsi, this\(%rbp\)) s
5 590 M
(    movq %rdx, ar1\(%rbp\)) s
5 579 M
(    movq %rcx, s2\(%rbp\)) s
5 557 M
(# for loop 1 initialization) s
5 546 M
(    movl $0, i\(%rbp\)                # i = 0) s
5 524 M
(for2:) s
5 513 M
(    cmpl $4, i\(%rbp\)                # check if i < 4) s
5 502 M
(    jge  finefor2                   # end for loop \(i >= 4\)) s
5 480 M
(# for loop 1 body) s
5 469 M
(    movq   this\(%rbp\), %rdi         # &this -> %rdi) s
5 458 M
(    movq   ar1\(%rbp\), %rsi          # &ar1 -> %rsi) s
5 447 M
(    movq   s2\(%rbp\), %rdx           # &s2 -> %rdx) s
5 436 M
(    movslq i\(%rbp\), %rcx            # i => %rcx) s
5 425 M
(    movb   \(%rsi, %rcx, 1\), %al     # ar1[i] -> %al) s
5 414 M
(    subb   %cl, %al                 # ar1[i] - i -> %al) s
5 403 M
(    leaq   s1\(%rbp\), %r8            # &s1 -> %r8) s
5 392 M
(    movb   %al, \(%r8, %rcx, 1\)      # s1.vi[i] = ar1[i] - i;) s
5 370 M
(    incl i\(%rbp\)                    # i++) s
5 359 M
(    jmp  for2                       # loop again) s
5 337 M
(finefor2:) s
5 315 M
(# cl cla\(s1\);) s
5 304 M
(    leaq cla\(%rbp\), %rdi) s
5 293 M
(    movl s1\(%rbp\), %esi) s
5 282 M
(    call _ZN2clC1E3st1) s
5 260 M
(# for loop 2 initialization) s
5 249 M
(    movl $0, i\(%rbp\)                # i = 0) s
5 227 M
(for3:) s
5 216 M
(    cmpl $4, i\(%rbp\)                # check if i < 4) s
5 205 M
(    jge  finefor3                   # end for loop \(i >= 4\)) s
5 183 M
(# for loop 2 body) s
5 172 M
(    movq   this\(%rbp\), %rdi         # &this -> %rdi) s
5 161 M
(    leaq   -92\(%rbp\), %rsi          # &cla.v3 -> %rsi) s
5 150 M
(    movq   s2\(%rbp\), %rdx           # &s2 -> %rdx) s
5 139 M
(    movslq i\(%rbp\), %rcx            # i => %rcx) s
5 128 M
(    movq   \(%rdx, %rcx, 8\), %rax    # s2.vd[i] -> %rax) s
5 117 M
(    movl   %eax, \(%rsi, %rcx, 4\)    # cla.v3[i] = s2.vd[i];) s
5 95 M
(    incl i\(%rbp\)                    # i++) s
5 84 M
(    jmp  for3                       # loop again) s
5 62 M
(finefor3:) s
5 40 M
(# copy return object from stack to the address in indo) s
5 29 M
(    leaq cla\(%rbp\), %rsi            # rep movsq source address) s
5 18 M
(    movq indo\(%rbp\), %rdi           # rep movsq destination address) s
5 7 M
(    movabsq $7, %rcx                # rep movsq repetitions) s
_R
S
%%Page: (4) 4
%%BeginPageSetup
_S
24 24 translate
/pagenum 4 def
/fname (printable/es1.s) def
/fdir (printable) def
/ftail (es1.s) def
% User defined strings:
/fmodstr (Fri Sep 20 11:47:09 2019) def
/pagenumstr (4) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 766 M
(    rep movsq                       # rep movsq, [0]) s
5 755 M
(    movq indo\(%rbp\), %rax           # return initialized object address) s
5 733 M
(    leave                           # movq %rbp, %rsp; popq %rbp;) s
5 722 M
(    ret) s
5 700 M
(#*******************************************************************************) s
_R
S
%%Trailer
%%Pages: 4
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
