******************************************
* io/io.cpp
******************************************

// ( SOLUZIONE 2018-02-23
struct newproc_param_t {
	void (*f)(int);
	int a;
	int s;
	natl avail;
} newproc_params;

void proxy(int)
{
	void (*f)(int);
	int a, s;
	
	
	f = newproc_params.f;
	a = newproc_params.a;
	s = newproc_params.s;
	sem_signal(newproc_params.avail);

	natl wd = startwatchdog(s);
	if (wd == 0xffffffff) {
		flog(LOG_WARN, "nessun watchdog disponibile");
		abort_p();
	}
	if (!call_user(f, a)) {
		flog(LOG_WARN, "call_user fallita");
		stopwatchdog(wd);
		abort_p();
	}
	stopwatchdog(wd);
	terminate_p();
}

extern "C" natl c_newproc(void f(int), int a, natl prio, natl secs)
{
	sem_wait(newproc_params.avail);
	newproc_params.f = f;
	newproc_params.a = a;
	newproc_params.s = secs;
	natl id = activate_p(proxy, 0, prio, LIV_SISTEMA);
	return id;
}

bool newproc_init()
{
	newproc_params.avail = sem_ini(1);
	return (newproc_params.avail != 0xFFFFFFFF);
}
// SOLUZIONE 2018-02-23 )


******************************************
* io/io.s
******************************************

// ( SOLUZIONE 2018-02-23
	fill_io_gate	IO_TIPO_NP	a_newproc
//   SOLUZIONE 2018-02-23 )
// ( SOLUZIONE 2018-02-23
	.extern c_newproc
a_newproc:
	call c_newproc
	iretq
//   SOLUZIONE 2018-02-23 )


