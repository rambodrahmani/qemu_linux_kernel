From 2eb828885ea0e5fcc473e22f0877d84de3bcb466 Mon Sep 17 00:00:00 2001
From: Giuseppe Lettieri <g.lettieri@iet.unipi.it>
Date: Sat, 24 Mar 2012 16:19:33 +0100
Subject: [PATCH 1/4] multiboot: Enable SVGA 0x4107 mode if requested

---
 hw/i386/multiboot.c           | 30 ++++++++++++++++++++++---
 pc-bios/optionrom/multiboot.S | 42 +++++++++++++++++++++++++++++++++++
 2 files changed, 69 insertions(+), 3 deletions(-)

diff --git a/hw/i386/multiboot.c b/hw/i386/multiboot.c
index 1a4344f5fc..5ba2659ecc 100644
--- a/hw/i386/multiboot.c
+++ b/hw/i386/multiboot.c
@@ -59,8 +59,13 @@ enum {
     MBI_MODS_ADDR   = 24,
     MBI_MMAP_ADDR   = 48,
     MBI_BOOTLOADER  = 64,
+    MBI_FB_ADDR	    = 88,
+    MBI_FB_PITCH    = 96,
+    MBI_FB_WIDTH    = 100,
+    MBI_FB_HEIGHT   = 104,
+    MBI_FB_BPP      = 108,
 
-    MBI_SIZE        = 88,
+    MBI_SIZE        = 116,
 
     /* Multiboot modules */
     MB_MOD_START    = 0,
@@ -80,6 +85,7 @@ enum {
     MULTIBOOT_FLAGS_MODULES     = 1 << 3,
     MULTIBOOT_FLAGS_MMAP        = 1 << 6,
     MULTIBOOT_FLAGS_BOOTLOADER  = 1 << 9,
+    MULTIBOOT_FLAGS_FB		= 1 << 12,
 };
 
 typedef struct {
@@ -157,6 +163,10 @@ int load_multiboot(FWCfgState *fw_cfg,
     uint32_t mh_entry_addr;
     uint32_t mh_load_addr;
     uint32_t mb_kernel_size;
+    uint32_t mh_mode_type = 1;
+    uint32_t mh_width = 0;
+    uint32_t mh_height = 0;
+    uint32_t mh_depth = 0;
     MultibootState mbs;
     uint8_t bootinfo[MBI_SIZE];
     uint8_t *mb_bootinfo_data;
@@ -186,7 +196,15 @@ int load_multiboot(FWCfgState *fw_cfg,
     memset(&mbs, 0, sizeof(mbs));
 
     if (flags & 0x00000004) { /* MULTIBOOT_HEADER_HAS_VBE */
-        error_report("multiboot knows VBE. we don't");
+        mh_mode_type = ldl_p(header+i+32);
+        mh_width = ldl_p(header+i+36);
+        mh_height = ldl_p(header+i+40);
+        mh_depth = ldl_p(header+i+44);
+
+        mb_debug("multiboot: mh_mode_type = %#x\n", mh_mode_type);
+        mb_debug("multiboot: mh_width = %d\n", mh_width);
+        mb_debug("multiboot: mh_height = %d\n", mh_height);
+        mb_debug("multiboot: mh_depth = %d\n", mh_depth);
     }
     if (!(flags & 0x00010000)) { /* MULTIBOOT_HEADER_HAS_ADDR */
         uint64_t elf_entry;
@@ -373,9 +391,15 @@ int load_multiboot(FWCfgState *fw_cfg,
                                 | MULTIBOOT_FLAGS_CMDLINE
                                 | MULTIBOOT_FLAGS_MODULES
                                 | MULTIBOOT_FLAGS_MMAP
-                                | MULTIBOOT_FLAGS_BOOTLOADER);
+                                | MULTIBOOT_FLAGS_BOOTLOADER
+				| (mh_mode_type? 0 : MULTIBOOT_FLAGS_FB));
     stl_p(bootinfo + MBI_BOOT_DEVICE, 0x8000ffff); /* XXX: use the -boot switch? */
     stl_p(bootinfo + MBI_MMAP_ADDR,   ADDR_E820_MAP);
+    if (!mh_mode_type) {
+    	stl_p(bootinfo + MBI_FB_WIDTH, mh_width);
+	stl_p(bootinfo + MBI_FB_HEIGHT, mh_height);
+	stb_p(bootinfo + MBI_FB_BPP, mh_depth);
+    }
 
     mb_debug("multiboot: entry_addr = %#x", mh_entry_addr);
     mb_debug("           mb_buf_phys   = "TARGET_FMT_plx, mbs.mb_buf_phys);
diff --git a/pc-bios/optionrom/multiboot.S b/pc-bios/optionrom/multiboot.S
index b7efe4de34..a3113722b9 100644
--- a/pc-bios/optionrom/multiboot.S
+++ b/pc-bios/optionrom/multiboot.S
@@ -32,6 +32,11 @@ BOOT_ROM_START
 
 run_multiboot:
 
+#	mov		$1, %eax
+#wait_gdb:
+#	cmp		$1, %eax
+#	je		wait_gdb
+
 	cli
 	cld
 
@@ -163,6 +168,43 @@ upper_mem_done:
 	shr		$10, %edx
 	mov		%edx, %fs:0x8
 
+	/* enable SVGA if requested */
+	mov		%fs:0x00, %eax	/* flags */
+	test		$0x1000, %eax	/* mb info has fb? */
+	jz		svga_done
+	/* es:di -> 256b buffer for mode info */
+	sub		$256, %esp
+	mov		%esp, %edi
+	mov		%ss, %ax
+	mov		%ax, %es
+	mov		$0x4f01, %ax
+	mov		$0x4107, %cx
+	int		$0x10
+	cmp		$0x004f, %ax
+	jne		svga_error
+	mov		%es:0x28(%edi), %eax /* fb addr */
+	mov		%eax, %fs:88
+	movl		$0x0, %fs:92
+	add		$256, %esp
+	/* change video mode */
+	mov		$0x4f02, %ax
+	mov		$0x4107, %bx
+	int		$0x10
+	cmp		$0x004f, %ax
+	jne		svga_error
+#	sti
+#	mov		$1, %eax
+#wait_gdb:
+#	cmp $1, %eax
+#	je wait_gdb
+#	cli
+	jmp		svga_done
+
+svga_error:
+	andl		$0xffff7fff, %fs:0x00
+
+svga_done:
+
 real_to_prot:
 	/* Load the GDT before going into protected mode */
 lgdt:
-- 
2.17.1

